name: Build and Publish GitHub Actions Runner Images

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  schedule:
    # Run weekly to pick up new base image updates
    - cron: '0 2 * * 1'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: quantcdn-templates/app-github-actions-runner

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      ARCH: amd64
      DOCKERFILE: Dockerfile
      RUNNER_ARCH: x64
      IS_DEFAULT: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image for testing
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          load: true
          tags: temp-build:latest
          cache-from: type=gha,scope=${{ env.ARCH }}
          cache-to: type=gha,mode=max,scope=${{ env.ARCH }}

      - name: Test container startup
        run: |
          # Test that the container shows proper error for missing env vars
          OUTPUT=$(docker run --rm temp-build:latest 2>&1 || true)
          if echo "$OUTPUT" | grep -q "GITHUB_ORG environment variable is required"; then
            echo "✅ Container validation working correctly"
          else
            echo "❌ Container validation failed"
            echo "Output: $OUTPUT"
            exit 1
          fi

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-${{ env.ARCH }}
            type=ref,event=pr,suffix=-${{ env.ARCH }}
            type=raw,value=${{ env.ARCH }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ env.IS_DEFAULT == 'true' && github.ref == 'refs/heads/main' }}
            type=raw,value=${{ env.ARCH }}-dev,enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=dev,enable=${{ env.IS_DEFAULT == 'true' && github.ref == 'refs/heads/develop' }}
            type=semver,pattern={{version}}-${{ env.ARCH }}
            type=semver,pattern={{major}}.{{minor}}-${{ env.ARCH }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          platforms: linux/${{ env.ARCH }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=${{ env.ARCH }}
            type=registry,ref=ghcr.io/quantcdn-templates/app-github-actions-runner:cache-${{ env.ARCH }}
          cache-to: |
            type=gha,mode=max,scope=${{ env.ARCH }}
            type=registry,ref=ghcr.io/quantcdn-templates/app-github-actions-runner:cache-${{ env.ARCH }},mode=max

      - name: Create build summary
        if: env.IS_DEFAULT == 'true'
        run: |
          echo "## GitHub Actions Runner Template Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Architectures Built**: x86_64 (amd64), ARM64" >> $GITHUB_STEP_SUMMARY
          echo "- **Default Architecture**: x86_64 (:latest tag)" >> $GITHUB_STEP_SUMMARY
          echo "- **Tags Generated**: :amd64, :arm64, :latest" >> $GITHUB_STEP_SUMMARY
          echo "- **Base Image**: ubuntu:22.04" >> $GITHUB_STEP_SUMMARY
          echo "- **Runner Version**: 2.328.0" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY

  build-arm64:
    runs-on: quant-arm
    permissions:
      contents: read
      packages: write
    env:
      ARCH: arm64
      DOCKERFILE: Dockerfile.arm64
      RUNNER_ARCH: arm64
      IS_DEFAULT: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image for testing
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          load: true
          tags: temp-build:latest
          cache-from: type=gha,scope=${{ env.ARCH }}
          cache-to: type=gha,mode=max,scope=${{ env.ARCH }}

      - name: Test container startup
        run: |
          # Test that the container shows proper error for missing env vars
          OUTPUT=$(docker run --rm temp-build:latest 2>&1 || true)
          if echo "$OUTPUT" | grep -q "GITHUB_ORG environment variable is required"; then
            echo "✅ Container validation working correctly"
          else
            echo "❌ Container validation failed"
            echo "Output: $OUTPUT"
            exit 1
          fi

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-${{ env.ARCH }}
            type=ref,event=pr,suffix=-${{ env.ARCH }}
            type=raw,value=${{ env.ARCH }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ env.IS_DEFAULT == 'true' && github.ref == 'refs/heads/main' }}
            type=raw,value=${{ env.ARCH }}-dev,enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=dev,enable=${{ env.IS_DEFAULT == 'true' && github.ref == 'refs/heads/develop' }}
            type=semver,pattern={{version}}-${{ env.ARCH }}
            type=semver,pattern={{major}}.{{minor}}-${{ env.ARCH }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          platforms: linux/${{ env.ARCH }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=${{ env.ARCH }}
            type=registry,ref=ghcr.io/quantcdn-templates/app-github-actions-runner:cache-${{ env.ARCH }}
          cache-to: |
            type=gha,mode=max,scope=${{ env.ARCH }}
            type=registry,ref=ghcr.io/quantcdn-templates/app-github-actions-runner:cache-${{ env.ARCH }},mode=max
